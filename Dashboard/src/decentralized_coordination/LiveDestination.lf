target C {
    coordination: decentralized,
    tracing: true,
    trace-plugin: telegraf_lf_trace_plugin,
    docker: {
      builder-base: "xronosinc/lf-trace-plugin-api:v1.2-c",
      //pre-run-script: "../container-environment.sh"
    }
  }
  
  import Count from "../lib/Count.lf"
  
  reactor Destination(STA: time = 100 weeks) {
    input in: int
    timer t(0, 500 ms)
  
    reaction(t) {=
      interval_t lag = lf_time_physical() - lf_time_logical();
      lf_print("**** Local reaction lag is " PRINTF_TIME "us at logical time " PRINTF_TIME "us.",
          lag/1000, lf_time_logical_elapsed()/1000);
    =}
  
    reaction(in) {=
      interval_t lag = lf_time_physical() - lf_time_logical();
      lf_print("**** Reaction to network input %d lag is " PRINTF_TIME "us at logical time " PRINTF_TIME "us.",
          in->value, lag/1000, lf_time_logical_elapsed()/1000);
    =}
  }
  
  federated reactor {
    c = new Count(offset=0, period = 3 s)
    p = new Destination()
    c.out -> p.in
  }